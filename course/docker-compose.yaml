version: '3.9'

networks:
  network-course: {}

volumes:
  mysql-data: {}
  etcd-data: {}

services:

  mysql-course:
    image: mysql/mysql-server:5.7
    networks:
      - network-course
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=course
      - MYSQL_USER=course_user
      - MYSQL_USER_HOST=%
      - MYSQL_PASSWORD=c_u_passw0rd

  redis-course:
    image: redis:bullseye
    networks:
      - network-course
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s

  etcd-course:
    image: quay.io/coreos/etcd:v3.5.6
    networks:
      - network-course
    ports:
      - "2379:2379"
      - "2380:2380"
    volumes:
      - etcd-data:/etcd-data:rw
    command: 
      - /usr/local/bin/etcd
      - --data-dir=/etcd-data
      - --name=node
      - --initial-cluster node=http://127.0.0.1:2380 \
      - --listen-peer-urls http://0.0.0.0:2380 \
      - --initial-advertise-peer-urls http://127.0.0.1:2380 \
      - --listen-client-urls http://0.0.0.0:2379 \
      - --advertise-client-urls http://127.0.0.1:2379
    healthcheck:
      test: ["CMD", "etcdctl", "endpoint", "health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
  
  vault-server:
    image: vault
    networks:
      - network-course
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=myroot
    cap_add:
      - IPC_LOCK
    healthcheck:
      test: ["CMD", "vault", "read", "sys/health"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 30s
    
  vault-agent-course:
    image: vault
    networks:
      - network-course
    volumes:
      - ./local-run-in-docker/vault-agent.hcl:/vault/config/vault-agent.hcl:ro
      - ./local-run-in-docker/approle:/vault/config/approle:ro
      - ./local-run-in-docker/appconf:/vault/config/appconf:rw
    cap_add:
      - IPC_LOCK
    command: [ "agent", "-config", "/vault/config/vault-agent.hcl" ]
    depends_on:
      vault-server:
        condition: service_healthy

  course:
    build: .
    image: youngshawn/course
    networks:
      - network-course
    ports:
      - "8080:8080"
    volumes:
      - ./local-run-in-docker/appconf:/app/conf:ro
      - ./local-run-in-docker/approle:/app/role:ro
    depends_on:
      mysql-course:
        condition: service_healthy
      redis-course:
        condition: service_healthy
      etcd-course:
        condition: service_healthy
      vault-server:
        condition: service_healthy
      vault-agent-course:
        condition: service_healthy






    


